/*****************************************/
/* Mixins */
/*****************************************/

@mixin htm-hover-grad { /* stylelint-disable-line */
    /* stylelint-disable */
    background: rgba(0, 0, 0, 1);
    background: -moz-linear-gradient(bottom, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0) 50%); 
    background: -webkit-gradient(bottom left, top left, color-stop(0%, rgba(0, 0, 0, 0.5)), color-stop(50%, rgba(0, 0, 0, 0)));
    background: -webkit-linear-gradient(bottom, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0) 50%);
    background: -o-linear-gradient(bottom, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0) 50%);
    background: -ms-linear-gradient(bottom, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0) 50%);
    background: linear-gradient(to top, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0) 50%);
    /* stylelint-enable */
    filter: progid:dximagetransform.microsoft.gradient(startColorstr='#000000', endColorstr='#000000', GradientType=1);
}

@mixin htm-transition($transition) { /* stylelint-disable-line */
    -webkit-transition: $transition;
    -moz-transition: $transition;
    -ms-transition: $transition;
    -o-transition: $transition;
}

@mixin htm-translate3d($x, $y, $z) { /* stylelint-disable-line */
    -webkit-transform: translate3d($x, $y, $z);
    -moz-transform: translate3d($x, $y, $z);
    -ms-transform: translate3d($x, $y, $z);
    -o-transform: translate3d($x, $y, $z);
    transform: translate3d($x, $y, $z);
}

@mixin htm-transform($transform) { /* stylelint-disable-line */
    -webkit-transform: $transform;
    -moz-transform: $transform;
    -ms-transform: $transform;
    -o-transform: $transform;
    transform: $transform;
}

@mixin htm-userselect($userselect) { /* stylelint-disable-line */
    -webkit-user-select: $userselect;
    -moz-user-select: $userselect;
    -ms-user-select: $userselect;
    user-select: $userselect;
}

@mixin animation ($animation) { /* stylelint-disable-line */
    animation-name: $animation;
    animation-fill-mode: forwards;
}

@-webkit-keyframes left-right { /* stylelint-disable-line */
    0% {
        transform: translateY(-20%) translateX(-10%);
    }
    100% {
        transform: translateY(0%) translateX(10%);
    }
}
@-o-keyframes left-right {
    0% {
        transform: translateY(-20%) translateX(-10%);
    }
    100% {
        transform: translateY(0%) translateX(10%);
    }
}
@keyframes left-right {
    0% {
        transform: translateY(-20%) translateX(-10%);
    }
    100% {
        transform: translateY(0%) translateX(10%);
    }
}
@-webkit-keyframes right-left {
    0% {
        transform: translateY(0%) translateX(10%);
    }
    100% {
        transform: translateY(-20%) translateX(-10%);
    }
}
@-o-keyframes right-left {
    0% {
        transform: translateY(0%) translateX(10%);
    }
    100% {
        transform: translateY(-20%) translateX(-10%);
    }
}
@keyframes right-left {
    0% {
        transform: translateY(0%) translateX(10%);
    }
    100% {
        transform: translateY(-20%) translateX(-10%);
    }
}


// ---------------------------------------------- \\
// Clearfix
// ---------------------------------------------- \\

@mixin clearfix { /* stylelint-disable-line */
    zoom: 1;
    &:before,
    &:after {
        content: '';
        display: table;
    }

    &:after {
        clear: both;
    }

}

// ---------------------------------------------- \\
// Block Setup
// ---------------------------------------------- \\

@mixin block-setup { /* stylelint-disable-line */
    display: block;
    position: relative;
    width: 100%;
}

// ---------------------------------------------- \\
// Responsive Images
// ---------------------------------------------- \\

@mixin responsive-image { /* stylelint-disable-line */
    display: block;
    width: 100%;
    max-width: 100%;
    height: auto;
}

// ---------------------------------------------- \\
// Transitions
// ---------------------------------------------- \\

@mixin transition($transition-property, $transition-time, $method) { /* stylelint-disable-line */
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}

// ---------------------------------------------- \\
// Centraliser
// ---------------------------------------------- \\

// Centralise Horizontal and Vertical
@mixin centraliser {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// Centralise Horizonta
@mixin centraliser-h {
    position: absolute;
    left: 50%;
    transform: translate(-50%, 0);
}

// Centralise Vertical
@mixin centraliser-v {
    position: absolute;
    top: 50%;
    transform: translate(0, -50%);
}

// ---------------------------------------------- \\
// Font Size
// ---------------------------------------------- \\

@function calculateRem($size) { /* stylelint-disable-line */

    $remSize: $size / 16px;
    @return $remSize * 1rem;

}

@mixin font-size($size) { /* stylelint-disable-line */

    font-size: $size;
    font-size: calculateRem($size); /* stylelint-disable-line */

}

// @include font-size(14px)

// ---------------------------------------------- \\
// Opacity
// ---------------------------------------------- \\

@mixin opacity($opacity) { /* stylelint-disable-line */

    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8

}

// @include opacity(0.8);

// ---------------------------------------------- \\
// Absolute Positioning
// ---------------------------------------------- \\
@mixin absolute-position ($top: auto, $right: auto, $bottom: auto, $left: auto) {
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
    position: absolute;
}

// @include absolute-position(10px, 10px, 5px, 15px);

// ---------------------------------------------- \\

// ---------------------------------------------- \\
// Bootstrap 4 Media Queries
// ---------------------------------------------- \\

$breakpoints-up: (
    'xs': (min-width: $screen-xs),
    'sm': (min-width: $screen-sm),
    'md': (min-width: $screen-md),
    'lg': (min-width: $screen-lg)
);

$breakpoints-down: (
    'xs': (max-width: $screen-xs),
    'sm': (max-width: $screen-sm),
    'md': (max-width: $screen-md),
    'lg': (max-width: $screen-lg)
);

// Mobile first
@mixin media-breakpoint-up($name) {

    @if map-has-key($breakpoints-up, $name) {

        @media #{inspect(map-get($breakpoints-up, $name))} {

            @content;

        }
    }

    @else {

        @warn "Couldn't find a breakpoint names `#{$name}\.";

    }
}

// Desktop first

@mixin media-breakpoint-down($name) {

    @if map-has-key($breakpoints-down, $name) {

        @media #{inspect(map-get($breakpoints-down, $name))} {

            @content;

        }
    }

    @else {

        @warn "Couldn't find a breakpoint names `#{$name}\.";

    }
}